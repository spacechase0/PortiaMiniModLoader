<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <Import Condition="$(OS) != 'Windows_NT' AND Exists('$(HOME)\mytimeatportia.targets')" Project="$(HOME)\mytimeatportia.targets" />
  <Import Condition="$(OS) == 'Windows_NT' AND Exists('$(USERPROFILE)\mytimeatportia.targets')" Project="$(USERPROFILE)\mytimeatportia.targets" />
  <PropertyGroup>
    <GamePath Condition="!Exists('$(GamePath)')">C:\Program Files\Steam\steamapps\common\My Time at Portia</GamePath>
    <GamePath Condition="!Exists('$(GamePath)')">C:\Program Files (x86)\Steam\steamapps\common\My Time at Portia</GamePath>
    <GamePath Condition="!Exists('$(GamePath)') AND '$(OS)' == 'Windows_NT'">$([MSBuild]::GetRegistryValueFromView('HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Steam App 666140', 'InstallLocation', null, RegistryView.Registry64, RegistryView.Registry32))</GamePath>
  </PropertyGroup>
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{223AE0A5-269C-4740-909B-1F9D51D08BF4}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>spacechase0.MiniModLoader</RootNamespace>
    <AssemblyName>MiniModLoader</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <PlatformTarget>x86</PlatformTarget>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="0Harmony, Version=1.2.0.1, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>..\packages\Lib.Harmony.1.2.0.1\lib\net35\0Harmony.dll</HintPath>
    </Reference>
    <Reference Include="Assembly-CSharp">
      <HintPath>$(GamePath)\Portia_Data\Managed\Assembly-CSharp.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="UnityEngine.CoreModule">
      <HintPath>$(GamePath)\Portia_Data\Managed\UnityEngine.CoreModule.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="System.Core">
      <HintPath>$(GamePath)\Portia_Data\Managed\System.Core.dll</HintPath>
      <Private>false</Private>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="ApiImpl\Mods\AssemblyManifest.cs" />
    <Compile Include="ApiImpl\Mods\BlankManifest.cs" />
    <Compile Include="ApiImpl\Mods\ModManager.cs" />
    <Compile Include="Api\Events\AfterLoadEventArgs.cs" />
    <Compile Include="Api\Events\AfterSaveEventArgs.cs" />
    <Compile Include="Api\Events\Events.cs" />
    <Compile Include="Api\Events\BeforeSaveEventArgs.cs" />
    <Compile Include="Api\Events\OnUpdateEventArgs.cs" />
    <Compile Include="Api\Json.cs" />
    <Compile Include="Api\IModLoader.cs" />
    <Compile Include="Api\Mods\IManifest.cs" />
    <Compile Include="Api\Mods\IModule.cs" />
    <Compile Include="Api\Mods\IModManager.cs" />
    <Compile Include="Api\Log.cs" />
    <Compile Include="Api\Translation.cs" />
    <Compile Include="Api\Translations.cs" />
    <Compile Include="ModLoader.cs" />
    <Compile Include="Patches\Pathea.SleepModule.cs" />
    <Compile Include="Patches\Pathea.UISystemNs.LaunchUICtr.cs" />
    <Compile Include="Patches\TextMgr.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Api\Util.cs" />
    <Compile Include="Unity\GlobalObjectComponent.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
    <Compile Include="Patches\Pathea.ArchiveNs.Archive.cs" />
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Target Name="BeforeBuild">
    <Error Condition="!Exists('$(GamePath)')" Text="Failed to find the game install path automatically; edit the *.csproj file and manually add a &lt;GamePath&gt; setting with the full directory path containing the Portia  executable." />
  </Target>
  <Target Name="AfterBuild">
    <CallTarget Targets="CopyModLoader" />
  </Target>
  <Target Name="CopyModLoader">
    <Copy SourceFiles="$(TargetDir)\$(TargetName).dll" DestinationFolder="$(GamePath)" />
    <Copy SourceFiles="$(TargetDir)\$(TargetName).pdb" DestinationFolder="$(GamePath)" />
    <!--<Copy SourceFiles="$(TargetDir)\$(TargetName).xml" DestinationFolder="$(GamePath)" />-->
    <Copy SourceFiles="$(TargetDir)\0Harmony.dll" DestinationFolder="$(GamePath)" />
  </Target>
  <PropertyGroup>
    <StartAction>Program</StartAction>
    <StartProgram>$(GamePath)\Portia.exe</StartProgram>
    <StartWorkingDirectory>$(GamePath)</StartWorkingDirectory>
  </PropertyGroup>
</Project>